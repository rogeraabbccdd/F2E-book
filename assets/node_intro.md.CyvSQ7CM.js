import{_ as a,c as i,o as n,a4 as s,m as e}from"./chunks/framework.BMi4FJYy.js";const g=JSON.parse('{"title":"認識 Node.js","description":"","frontmatter":{},"headers":[],"relativePath":"node/intro.md","filePath":"node/intro.md","lastUpdated":1758847662000}'),l={name:"node/intro.md"},p=s('<h1 id="認識-node-js" tabindex="-1">認識 Node.js <a class="header-anchor" href="#認識-node-js" aria-label="Permalink to &quot;認識 Node.js&quot;">​</a></h1><p>認識 Node.js</p><h2 id="介紹" tabindex="-1">介紹 <a class="header-anchor" href="#介紹" aria-label="Permalink to &quot;介紹&quot;">​</a></h2><p><a href="https://nodejs.org/zh-tw" target="_blank" rel="noreferrer">Node.js</a> 是一個可以讓 JavaScript 伺服器執行環境<br> 其他類似的有</p><ul><li><a href="https://deno.com/" target="_blank" rel="noreferrer">Deno</a> Node.js 創始人開發的新環境，以改善 Node.js 的缺點</li><li><a href="https://bun.sh/" target="_blank" rel="noreferrer">Bun</a> 目前性能最好的 JavaScript 伺服器環境</li></ul><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>課程使用目前仍是主流的 Node.js，但未來可能會改用 Bun</p></div>',6),t=e("iframe",{width:"560",height:"315",src:"https://www.youtube.com/embed/LB8KwiiUGy0",frameborder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture",allowfullscreen:""},null,-1),r=s(`<h2 id="nvm" tabindex="-1">nvm <a class="header-anchor" href="#nvm" aria-label="Permalink to &quot;nvm&quot;">​</a></h2><p>nvm 是 Node.js 的管理工具，可以在一台電腦安裝許多個 Node.js 版本<br> 這樣可以避免不同專案使用不同版本的 Node.js 時，造成的相容性問題</p><ul><li><a href="https://github.com/nvm-sh/nvm" target="_blank" rel="noreferrer">Mac/Linux</a></li><li><a href="https://github.com/coreybutler/nvm-windows" target="_blank" rel="noreferrer">Windows</a></li></ul><h2 id="npm" tabindex="-1">npm <a class="header-anchor" href="#npm" aria-label="Permalink to &quot;npm&quot;">​</a></h2><p>npm 是 Node.js 的預設的套件管理工具，可以用來安裝、管理、移除 Node.js 的套件<br> 以下是常用的指令</p><ul><li><code>npm init</code> 初始化專案，產生 <code>package.json</code> 和 <code>package-lock.json</code></li><li><code>npm i</code> 安裝專案的所有套件</li><li><code>npm i &lt;套件名稱&gt;</code> 安裝指定套件</li><li><code>npm un &lt;套件名稱&gt;</code> 移除指定套件</li><li><code>npm run &lt;指令&gt;</code> 執行 <code>package.json</code> 裡面的指令</li></ul><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>課程使用目前較普及的 npm，還有其他的套件管理工具，每個工具的指令都不太一樣</p><ul><li><a href="https://yarnpkg.com/" target="_blank" rel="noreferrer">yarn</a> 由 Facebook 開發的套件管理工具，Node.js 環境以 <code>corepack enable</code> 啟用</li><li><a href="https://pnpm.io/zh-TW/" target="_blank" rel="noreferrer">pnpm</a> 速度快、節省空間的套件管理工具，Node.js 環境以 <code>corepack enable</code> 啟用</li><li><a href="https://bun.sh/" target="_blank" rel="noreferrer">bun</a> Bun 內建套件管理功能</li></ul></div><h2 id="檔案結構" tabindex="-1">檔案結構 <a class="header-anchor" href="#檔案結構" aria-label="Permalink to &quot;檔案結構&quot;">​</a></h2><ul><li><code>node_modules</code> 資料夾存放這個專案用到的所有套件，必使用 <code>.gitignore</code> 忽略</li><li><code>package.json</code> 記錄了這個 Node.js 專案的資訊，版本、使用套件等</li></ul><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>每個套件管理工具都有一個 lock 檔案，記錄使用套件的所有相依套件和版本，確保每次安裝的套件版本都一樣</p><ul><li>npm 會產生 <code>package-lock.json</code></li><li>yarn 會產生 <code>yarn.lock</code></li><li>pnpm 會產生 <code>pnpm-lock.yaml</code></li><li>bun 會產生 <code>bun.lockb</code> (1.2 以前) 或 <code>bun.lock</code></li></ul></div><div class="language-json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 專案使用 ECMAScript 語法</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;type&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;module&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 專案名稱</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;test&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 版本</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;version&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;1.0.0&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 說明</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;description&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 切入點，編寫套件給別人引用時才需要</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;main&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;index.js&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // npm 指令</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;scripts&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;start&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;node index.js&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 作者</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;author&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 版權</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;license&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ISC&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 使用套件</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;dependencies&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 開發環境使用套件</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;devDependencies&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><p>在專案的資料夾使用 <code>npm init</code> 初始化專案時會自動產生</p><h2 id="執行" tabindex="-1">執行 <a class="header-anchor" href="#執行" aria-label="Permalink to &quot;執行&quot;">​</a></h2><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">node</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test.js</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div>`,14),h=[p,t,r];function o(k,c,d,u,b,E){return n(),i("div",null,h)}const y=a(l,[["render",o]]);export{g as __pageData,y as default};
